extends ./shared/_layout.pug
include _mixins

block variables
  - var title = 'Drag13 Dev Blog - JavaScript, Performance, Security'
  - var description = 'Blog about web-programming, performance, security, and some-times - clouds'
  - var keywords = 'programming, web-programming, javascript, performance, security, web-performance, performance-tuning, .net, c#, f#, html, css, drag13'
  - var canonical = 'https://drag13.io/'
  - var img = '~/img/main.png'

block page-styles
  link(rel="stylesheet", href="~/styles/landing.less")

block content
    h1 Blog about JavaScript, performance and security

    +news(['performance', 'webperf'], 'Twitter bot dedicted only to #webperf is here!')
      include:markdown-it(html) ./news/twt-bot.md

    +pp(
      ['typescript', 'typings'],
      'TypeScript Tips and Tricks - Utility Types With Examples',
      'TypeScript is a very powerful language, however, it heavily relies on the types. And sometimes, you may found that you write more types than actual code. In this case, you should take a look into the Utility types that will help you to write fewer types and still keep your code type-safe.',
      './posts/typescript-tricks-utility-examples/index.pug',
      null,
      '~img/kdpv/ts-utility.png'
    )

    +news(['perfrunner', 'performance', 'performance-testing'], 'Hey ho! Perfrunner\'s config file already available with v.0.9! ðŸ¥³')
      include:markdown-it ./news/perfrunner-config.md

    +pp(
      ['typescript', 'typings', 'declarations'],
      'TypeScript Tips and Tricks - Declarations With Examples',
      'TypeScript is a very powerful language and it is becoming more and more popular. It is easy to start but hard to master. In this article I will show you some useful tips and tricks about TypeScript declarations that may help you in everyday coding and will keep your code type-safe.',
      './posts/typescript-tips-tricks-declarations/index.pug',
      null,
      '~img/kdpv/ts-declarations.png'
    )

    +pp(
      ['performance-testing', 'perfrunner', 'first-contentful-paint', 'performance-metrics'],
      'Perfrunner - automated tool to track your website speed changes',
      `A few months ago I worked on the performance improvements for one React-based web application. I tried different tricks to improve initial application loading and I was really annoyed with the way of testing my changes. I had to launch the application several times to get average results. I had to repeat all launches against at least two types of networks (4g and my current). And I must do all mentioned once again for cache and cashless scenarios. So, for the one single change, I must run at least 12 tests. This was not fun.
      I decided that I don\'t want to do this anymore and this is how the Perfrunner appeared.`,
      './posts/perfrunner-intro/index.pug',
      null,
      '~/img/kdpv/perfrunner-intro.jpg'
    )

    +pp(
      ['react','security', 'content-security-policy'],
      'How to use React without unsafe-inline runtime chunk and why',
      'React.JS is an awesome library that widely used all over the world. However, it also contains some pitfalls that might negatively impact your application. And here I want to discuss one of such pitfalls - inlined runtime chunk that might prevent you from correct using one of the most useful security header - Content-Security-Policy.',
      './posts/react-inline-runtimer-chunk/index.pug',
      null,
      '~/img/kdpv/react-security.png'
    )

    +news(['perfrunner', 'performance', 'performance-testing'], 'Hey ho! Perfrunner already in alpha now! ðŸ¥³')
      include:markdown-it ./news/perfrunner-arived.md

    +pp(
      ['typescript', '.d.ts', 'types'],
      'How to add custom types into the TypeScript project',
      'Working with TypeScript is very comfortable. It provides Intellisense, type-checking, and makes the developer\'s life much easier. But, sometimes, when I am using external libraries, I got a problem. They don\t provide types or shipped types that are outdated. In this case, there is no other option but to define custom typings my own. Luckily, it\'s not that hard as you may expect.',
      './posts/custom-typings/index.pug'
      )

    +pp(
      ['security', 'http-headers', 'content-security-policy'],
      'Top-5 HTTP Security Headers in 2020',
      'Nowadays, security is important as never before. Iâ€™ve prepared a very short article about the Top-5 security headers in 2020 that will help your site keep your users in safety.',
      './posts/security-headers/index.pug',
      null,
      '~/img/kdpv/security-headers.png'
      )

    +pp(
      ['react', 'performance'],
      'React.JS application, performance and -500 milliseconds at launch - the history of our optimizations in numbers',
      'Simple performance optimizations and -500 milliseconds at launch for the create-react-app.',
      'https://habr.com/ru/post/495984/',
      'Continue in Russian')

    +pp(
      ['performance'],
      'Profile loading of Habr or how 189 requests influence the rendering',
      'If you are interested in how to profile and (what is more important) understand the profiling results - here is the example of profiling Habr.com - most popular IT resource in CIS.',
      'https://habr.com/ru/post/454444/',
      'Continue in Russian')

    +pp(
      ['angular', 'ng-library'],
      'Discovering new angular/cli commandâ€Šlibrary - short overview',
      '@angular/cli added support for creating your own library with angular components. Let\'s check what we are offered.',
      'https://medium.com/@drag13dev/https-medium-com-drag13dev-discovering-new-angular-cli-command-library-18fe62e0ffb0')

    +pp(
      ['v8', 'bytecode', 'performance'],
      'How to get JavaScript bytecode from Node.js and V8 in 2019',
      'Want to know how your code looks like from bytecode? Getting JavaScript bytecode is simpler than you think.',
      './posts/v8-bytecode/index.pug',
      'Follow the white rabbit')

    +pp(
      ['javascript', 'development'],
      'How to start new JS project from scratch with automated formatting, linting, testing and documentation',
      'Keeping your code consistent and well-formatted not an easy task even when you work alone. But when you work with a team or with open source projects all start getting even harder. Everyone has their own code style, someone doesnâ€™t run tests, and no one writes documentation. This article will help you to set up all these things and even more â€” automate this routine to never do it manually.',
      './posts/start-new-project/index.pug')

    +pp(
      ['ci/cd', 'c#', 'travis', 'codecov'],
      'Free Continuous Integration for your GitHub project with three easy steps - build, test, deploy',
      'Hi guys! Today we will learn how to setup Continuous Integration process for the C# project hosted on GitHub. This is very easy, can really improve your code quality and you always be sure that no one destroys your code with latest commit. Are you interested? Letâ€™s give it a try!',
      './posts/ci-cd-net/index.pug'
    )
